# MapCompare v 0.1
# Written by Waves
# This software is intended to be used to compare map times on CSGO's "Church of Citatsia" surf servers

from datetime import datetime, date


def main():

    # This maps list is generated by makeMapList.py, and is complete as of 11/13/2016
    # If the server's list of maps is updated, the new maps must be added for this program to work properly
    # The best way to do this would be by using makeMapList.py with a player's times who has completed all maps
    noob_maps_list = ['surf_ace_fix,', 'surf_aircontrol_ksf,', 'surf_akai_final,', 'surf_and_destroy,',
                      'surf_beginner,', 'surf_calycate_csgo,', 'surf_classics,', 'surf_colours,', 'surf_colum_up,',
                      'surf_derpis_ksf,', 'surf_ethereal,', 'surf_forbidden_ways_ksf,', 'surf_funhouse_njv,',
                      'surf_grassland,', 'surf_kitsune,', 'surf_leet_xlbeta7z,', 'surf_legends_lite_gfl,',
                      'surf_lessons,', 'surf_life_of_duck_go,', 'surf_lullaby_ksf,', 'surf_lux,', 'surf_mesa,',
                      'surf_minuet_v1p,', 'surf_mom,', 'surf_newb_hazard_r1,', 'surf_pox,', 'surf_prelude_ksf,',
                      'surf_prime_time_r3vamp,', 'surf_rebel_resistance_njv,', 'surf_Rebel_scaz_njv,', 'surf_reprise,',
                      'surf_rookie,', 'surf_simpsons_go_rc2,', 'surf_spacejam,', 'surf_the_gloaming,',
                      'surf_trance_ksf,', 'surf_utopia_njv,', 'surf_water-run_banjo_skill,', 'surf_waterworks,',
                      'surf_year3000,']

    maps_list = noob_maps_list

    print("Hello and welcome to MapCompare!")
    print("Now you can find out if you are better than your friends!")
    my_name = input("What is your name? ")
    other_name = input("Who are you comparing to today? ")

    my_times = input("Please enter the list of your times produced by the server: ")
    other_times = input("Please enter the list of your opponent's times produced by the server: ")

    my_list = my_times.split(" ")
    other_list = other_times.split(" ")

    print(my_list)

    i = 0               # index relative to master map list
    my_i = 0            # index relative to user map list
    other_i = 0         # index relative to opponent map list
    my_wins = 0
    other_wins = 0
    my_beat = 0
    other_beat = 0
    both_fail = 0

    sum_maps = len(maps_list)
    while i < sum_maps:
        if (maps_list[i] == my_list[my_i]) & (maps_list[i] == other_list[other_i]):  # if both users have the current map
            my_time = datetime.strptime(my_list[my_i+2].replace(",", "0000"), "%M:%S:%f") # gets rid of a trailing comma, sets up microseconds right
            other_time = datetime.strptime(other_list[other_i+2].replace(",", "0000"), "%M:%S:%f")
            if my_time < other_time:  # remember: a smaller time is a faster one.
                print("They both have beaten " + maps_list[i] + " but " + my_name + " is " +
                      str(other_time - my_time) + " faster than " + other_name)
                my_wins += 1

            elif my_time >= other_time:
                print("They both have beaten " + maps_list[i] + " but " + other_name + " is " +
                      str(my_time - other_time) + " faster than " + my_name)
                other_wins += 1
            my_i += 5
            other_i += 5

        elif maps_list[i] == my_list[my_i]:
            print("Only " + my_name + " has beaten " + maps_list[i])
            my_i += 5
            my_beat += 1

        elif maps_list[i] == my_list[other_i]:
            print("Only " + other_name + " has beaten " + maps_list[i])
            other_i += 5
            other_beat += 1

        else:
            print("Neither player has beaten " + maps_list[i] + " ... git gud")
            both_fail += 1

        i += 1

    print("=====SUMMARY=====")
    print(str(i))
    print(my_name + " has beaten " + other_name + "'s times on " + str(my_wins) + " maps")
    print(my_name + " has beaten " + str(my_beat) + " maps which " + other_name + " has not beat")
    print(other_name + " has beaten " + my_name + "'s times on " + str(other_wins) + " maps")
    print(other_name + " has beaten " + str(other_beat) + " maps which " + my_name + " has not beat")
    print("There are " + str(both_fail) + " maps which neither player has beat")

main()
